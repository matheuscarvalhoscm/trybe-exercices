use("agg_example"); 
db.transactions.find();

db.transactions.aggregate(
  [{ $match: { from: "Dave America" } }],
);

db.transactions.aggregate([
  {
		$match: {
			$or: [
				{ value: { $gt: 700, $lt: 6000 } },
				{ from: "Lisa Simpson" }
			]
		}
	}
]);

db.transactions.aggregate([
	{ $match: { value: { $gt: 1000 } } },
	{ $limit: 3 }
]);

db.transactions.aggregate([
	{
		$group: {
			_id: "$bank"
		}
	}
]);

db.transactions.aggregate([
	{
		$group: {
			_id: "$bank",
			transactionsAmount: {
				$sum: "$value"
			},
			totalTransactions: {
				$sum: 1
			}
		}
	}
]);

db.transactions.aggregate([
	{
		$group: {
			_id: "$bank",
			transactionsAmount: {
				$sum: "$value"
			}
		}
	}
]);

db.transactions.aggregate([
	{
		$group: {
			_id: "$bank",
			transactionsAmount: {
				$sum: "$value"
			}
		}
	},
	{
		$match: {
			transactionsAmount: { 
				$gt: 1000
			}
		}
	},
]);

// 8. Selecione todos os clientes com as suas respectivas transações feitas;
db.clients.aggregate([
	{
		$lookup: {
			from: "transactions",
			localField: "name",
			foreignField: "from",
			as: "customer_transactions"
		}
	}
]);

// 9. Selecione quatro clientes com as suas respectivas transações recebidas;
db.clients.aggregate([
	{
		$lookup: {
			from: "transactions",
			localField: "name",
			foreignField: "to",
			as: "received_transactions"
		}
	},
	{
		$limit: 4
	}
]);
